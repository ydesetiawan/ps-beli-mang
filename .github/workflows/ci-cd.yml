name: CI/CD Pipeline

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'false'

      - name: Build, tag, and push Docker image
        env:
          ECR_REGISTRY: 560918124458.dkr.ecr.ap-southeast-1.amazonaws.com/ydesetiawan94-repository
        run: |
          IMAGE_TAG=$(date +'%Y%m%d%H%M%S')-${{ github.sha }}
          docker build -t ydesetiawan94-repository:${IMAGE_TAG} .
          
          docker tag ydesetiawan94-repository:${IMAGE_TAG} $ECR_REGISTRY:${IMAGE_TAG}
          
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            aws ecr batch-delete-image --repository-name ydesetiawan94-repository --image-ids imageTag=latest || echo "No existing tag to delete"
            docker tag ydesetiawan94-repository:${IMAGE_TAG} $ECR_REGISTRY:latest
            docker push $ECR_REGISTRY:latest
          fi

          docker push $ECR_REGISTRY:${IMAGE_TAG}

      - name: Log out of Docker
        run: docker logout ${{ secrets.ECR_REPOSITORY }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awscli

      - name: Get latest Docker image tag
        id: get-latest-tag
        run: |
          IMAGE_TAG=$(aws ecr describe-images --repository-name ydesetiawan94-repository --query 'sort_by(imageDetails,& imagePushedAt)[-1].imageTags[0]' --output text)
          echo "::set-output name=tag::$IMAGE_TAG"

      - name: Update ECS service
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          IMAGE_TAG: ${{ steps.get-latest-tag.outputs.tag }}
        run: |
          aws ecs update-service --cluster projectsprint --service ydesetiawan-service --force-new-deployment --task-definition ydesetiawan-task:${IMAGE_TAG}
  